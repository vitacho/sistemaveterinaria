/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistaprueba;

import Controlador.PersonaDB;
import Controlador.RolDB;
import Modelo.Persona;
import Modelo.Rol;
import java.util.List;
import javax.swing.JOptionPane;

import javax.swing.table.DefaultTableModel;


public class frmPersona extends javax.swing.JDialog {

    /**
     * Creates new form frmPersona
     */
    public frmPersona(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        inicio();
    }

    DefaultTableModel model;
    PersonaDB perDB = new PersonaDB(); // 
    RolDB rolDB = new RolDB();

    private void inicio() {
        llenaTablaClientes("A");
        //txtid.setVisible(false);
    }
    
//        private String retornaFechaString(Calendar fecha, int dias) {
//        String retorno = null;
//        fecha.add(Calendar.DAY_OF_YEAR, dias);
//        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
//        if (fecha != null) {
//            retorno = sdf.format(fecha.getTime());
//        }
//        return retorno;
//    }
    
    private void llenaTablaClientes(String estado) {
        tablaModel();
        List<Persona> lista = null;

        lista = perDB.cargarClientes(estado, lista);

        for (Persona perLis : lista) {
            model.addRow(new Object[]{
                perLis.getId_persona(), perLis.getCedula(), perLis.getNombre(), perLis.getApellido(), perLis.getTelefono()
            });
        }

    }

    private void tablaModel() {
        // metodo sirve para llamar a los campos que se hayan guardado en la base de datos

        Tabla1.getColumnModel().getColumn(0).setMaxWidth(0);
        Tabla1.getColumnModel().getColumn(0).setMinWidth(0);
        Tabla1.getColumnModel().getColumn(0).setPreferredWidth(0);

        Tabla1.getColumnModel().getColumn(1).setPreferredWidth(300);
        Tabla1.getColumnModel().getColumn(2).setPreferredWidth(300);
        Tabla1.getColumnModel().getColumn(3).setPreferredWidth(300);
        Tabla1.getColumnModel().getColumn(4).setPreferredWidth(300);
        model = (DefaultTableModel) Tabla1.getModel();
        model.setNumRows(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtced = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtape = new javax.swing.JTextField();
        txtnombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTele = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtid = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla1 = new javax.swing.JTable();
        btnguardar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnDesactivar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Ced");

        jLabel2.setText("Ape");

        jLabel3.setText("Nom");

        jLabel4.setText("Tele");

        txtid.setText("txtId");

        Tabla1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "cedula", "nombre", "ape", "telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Tabla1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tabla1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tabla1);

        btnguardar.setText("Guardar");
        btnguardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnguardarActionPerformed(evt);
            }
        });

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnDesactivar.setText("Desactivar");
        btnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesactivarActionPerformed(evt);
            }
        });

        jLabel5.setText("Buscar Cedula");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jButton1.setText("Cancelar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnguardar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnModificar)
                .addGap(30, 30, 30)
                .addComponent(btnDesactivar)
                .addGap(30, 30, 30)
                .addComponent(jButton1)
                .addGap(28, 28, 28)
                .addComponent(jButton3)
                .addGap(153, 153, 153))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtTele, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtced, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(txtape, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(71, 71, 71)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtid))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtced, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtape, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTele, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(btnguardar)
                    .addComponent(btnModificar)
                    .addComponent(btnDesactivar)
                    .addComponent(jButton1))
                .addGap(27, 27, 27)
                .addComponent(txtid)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnguardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnguardarActionPerformed
        guardar();
    }//GEN-LAST:event_btnguardarActionPerformed

    private void Tabla1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tabla1MouseClicked

        int seleccionar = Tabla1.getSelectedRow();

        int idCliente = Integer.parseInt(model.getValueAt(seleccionar, 0).toString()); // esto esta tomando el id de la tabla

        Persona per = perDB.traeClientesId(idCliente);

        txtid.setText(String.valueOf(per.getId_persona()));
        txtced.setText(per.getCedula());
        txtape.setText(per.getApellido());
        txtnombre.setText(per.getNombre());
        txtTele.setText(per.getTelefono());

    }//GEN-LAST:event_Tabla1MouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed

        btnguardar.setText("Actualizar");
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed

        if (txtBuscar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "LLENAR CAMPO REQUERIDO", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            buscarClienteCedula(txtBuscar.getText());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesactivarActionPerformed
        desactivar();
    }//GEN-LAST:event_btnDesactivarActionPerformed

    private void desactivar(){
        
       //int seleccionar = Tabla1.getSelectedRow();
        int si = JOptionPane.showConfirmDialog(this, "esta seguro de eliminar al cliente","Desactivar" ,JOptionPane.YES_NO_OPTION);
        
        if(si == JOptionPane.NO_OPTION){
            JOptionPane.showMessageDialog(null, "no se ha podido eliminar al cliente", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }else{
              int seleccionar = Tabla1.getSelectedRow();
              
             int id = Integer.parseInt(String.valueOf(model.getValueAt(seleccionar, 0))); 
             Persona per = perDB.traeClientesId(id);
             per.setEstado("P");
             perDB.actualizarCliente(per);
             
              JOptionPane.showMessageDialog(null, "CLIENTE DESACTIVADO", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
              inicio();
              
        }
    }
    private void buscarClienteCedula(String cedula) {
        model.setNumRows(0);
        List<Persona> listaP = null;

        cedula = txtBuscar.getText();

        listaP = perDB.buscarPersonaCed(cedula);

        if (listaP.size() > 0) {
            for (Persona perLis : listaP) {
                model.addRow(new Object[]{
                    perLis.getId_persona(), perLis.getCedula(), perLis.getNombre(), perLis.getApellido(), perLis.getTelefono()
                });
            }

        } else {
            JOptionPane.showMessageDialog(null, "CLIENTE NO ENCONTRADO", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            llenaTablaClientes("A");
        }

    }

    private void guardar() {

        Persona per = null; // la entidad persona

        if (btnguardar.getText().equals("Guardar")) {
            per = perDB.traeClientesCedula(txtced.getText()); // metodo para validar la cedula al ingresar

            if (per == null) {
                if (validarCampos() == true) {
                    per = new Persona();
                    Rol ro = new Rol();

                    ro = rolDB.traeRol("Cliente"); // Importante
                    per.setRol(ro); // importante 

                    per.setCedula(txtced.getText().trim());
                    per.setNombre(txtnombre.getText().trim());
                    per.setApellido(txtape.getText().trim());
                    per.setTelefono(txtTele.getText().trim());
                    per.setEstado("A"); // estado Activo

                    ro.getListPerso().add(per); // guarda el id de la relacion de las tablas

                    perDB.nuevoCliente(per);

                    inicio();

                }
            }else{
                JOptionPane.showMessageDialog(null, "LA CEDULA YA EXISTE EN EL SISTEMA", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            // actulizar los datos
            if (btnguardar.getText().equals("Actualizar")) {

                per = perDB.traeClientesCedula(txtced.getText());

                if (per == null) {
                    int idCliente = Integer.parseInt(txtid.getText());

                    per = perDB.traeClientesId(idCliente);
                    per.setCedula(txtced.getText().trim());
                    per.setNombre(txtnombre.getText().trim());
                    per.setApellido(txtape.getText().trim());
                    per.setTelefono(txtTele.getText().trim());
                    per.setEstado("A"); // estado Activo

                    perDB.actualizarCliente(per);
                    
                    JOptionPane.showMessageDialog(null, "Cliente Modificado");

                    inicio();

                }

            }

        }

    }

    //crear metodo validarCampos
    private boolean validarCampos() {
        boolean lleno = true;

        if (txtced.getText().equals("") || txtnombre.getText().equals("") || txtape.getText().equals("")) {
            lleno = false;
        } else {
            lleno = true;
        }

        return lleno;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPersona.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                frmPersona dialog = new frmPersona(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabla1;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDesactivar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnguardar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtTele;
    private javax.swing.JTextField txtape;
    private javax.swing.JTextField txtced;
    private javax.swing.JLabel txtid;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
}
