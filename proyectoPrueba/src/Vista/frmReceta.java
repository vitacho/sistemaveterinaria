/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

//import Controlador.RecetaDB;
import Controlador.ConsultaDB;
import Controlador.PersonaDB;
import Controlador.RecetaDB;
import Controlador.Validaciones;
import Modelo.Consulta;
import Modelo.Mascota;
import Modelo.Receta;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class frmReceta extends javax.swing.JFrame {

    /**
     * Creates new form frmReceta
     */
    RecetaDB recetaDB = new RecetaDB();
    ConsultaDB consultaDB = new ConsultaDB();
    Consulta mas = null;
    Consulta c = new Consulta();
    private Consulta consultita;

//
    DefaultTableModel model;
    Validaciones validar = new Validaciones();
    ConsultaDB conDB = new ConsultaDB();
    PersonaDB perDB = new PersonaDB();
    DefaultTableModel modelConsulta;
    String t;

    public Consulta getConsultita() {
        return consultita;
    }

    public void setConsultita(Consulta consultita) {
        this.consultita = consultita;
    }

    DefaultTableModel model1 = new DefaultTableModel();
    DefaultTableModel model2 = new DefaultTableModel();
    //DefaultTableModel modelConsulta;
    Validaciones val = new Validaciones();

    public frmReceta() {
        initComponents();
        txtNro.setText(val.ObtenerCodString(obtenerCodigoReceta()));
        inicio();
        txtIDConsulta.setVisible(false);

    }

    private void inicio() {
        //TableModelConsulta();      
//        btnNuevo.setEnabled(true);
        btnImprimir.setText("Imprimir");
        btnCancelar.setEnabled(false);
        btnImprimir.setEnabled(false);
        txtAindicaciones.setEnabled(false);
        txtAmedicamentos.setEnabled(false);
        jDate.setEnabled(false);
        txtCliente.setEnabled(false);
        txtMascota.setEnabled(false);
        jDate.setEnabled(false);
        txtNro.setEnabled(false);
        txtCi.setEnabled(false);
//        Activa_DesactivaCampos(false);
//        TablaCita.setEnabled(true);   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog2 = new javax.swing.JDialog();
        jScrollPane3 = new javax.swing.JScrollPane();
        TableConsultas = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldBuscar = new javax.swing.JTextField();
        jButtonbuscarConsulta = new javax.swing.JButton();
        btnRecetar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDate = new javax.swing.JTextField();
        txtMascota = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAindicaciones = new javax.swing.JTextArea();
        txtNro = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAmedicamentos = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnImprimir = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnSalir = new javax.swing.JButton();
        btnBuscarConsulta = new javax.swing.JButton();
        txtIDConsulta = new javax.swing.JLabel();
        txtCi = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        jDialog2.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog2.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TableConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "MASCOTA", "PRESIÓN", "TEMPERATURA", "PESO", "CÉDULA", "DUEÑO", "VETERINARIO", "FECHA"
            }
        ));
        TableConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableConsultasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(TableConsultas);

        jDialog2.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, 1060, 220));

        jLabel10.setFont(new java.awt.Font("Constantia", 1, 36)); // NOI18N
        jLabel10.setText("LISTA DE CONSULTAS ");
        jDialog2.getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        jTextFieldBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBuscarActionPerformed(evt);
            }
        });
        jDialog2.getContentPane().add(jTextFieldBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, 310, 30));

        jButtonbuscarConsulta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonbuscarConsulta.setText("Buscar por CI");
        jButtonbuscarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonbuscarConsultaActionPerformed(evt);
            }
        });
        jDialog2.getContentPane().add(jButtonbuscarConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 90, -1, 30));

        btnRecetar.setText("Recetar");
        btnRecetar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecetarActionPerformed(evt);
            }
        });
        jDialog2.getContentPane().add(btnRecetar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 220, -1, -1));

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDOP1.jpg"))); // NOI18N
        jLabel11.setText("jLabel2");
        jDialog2.getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("RECETA");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("CI:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 70, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Mascota:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Fecha");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Nro. de Receta");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDateActionPerformed(evt);
            }
        });
        getContentPane().add(jDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 200, 30));

        txtMascota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMascotaActionPerformed(evt);
            }
        });
        getContentPane().add(txtMascota, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 200, 30));

        txtAindicaciones.setColumns(20);
        txtAindicaciones.setLineWrap(true);
        txtAindicaciones.setRows(5);
        txtAindicaciones.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAindicaciones);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 210, 290, 240));

        txtNro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroActionPerformed(evt);
            }
        });
        getContentPane().add(txtNro, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 110, 40));

        txtAmedicamentos.setColumns(20);
        txtAmedicamentos.setLineWrap(true);
        txtAmedicamentos.setRows(5);
        txtAmedicamentos.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtAmedicamentos);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 290, 240));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Indicaciones");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 170, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Medicamentos");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 470, 110, 30));

        btnImprimir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnImprimir.setText("Imprimir");
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        getContentPane().add(btnImprimir, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 470, 100, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Cliente:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        getContentPane().add(txtCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 200, 30));

        btnSalir.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 110, 30));

        btnBuscarConsulta.setText("Buscar Consulta");
        btnBuscarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarConsultaActionPerformed(evt);
            }
        });
        getContentPane().add(btnBuscarConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 20, -1, -1));

        txtIDConsulta.setText("txtIDConsulta");
        getContentPane().add(txtIDConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, -1, -1));

        txtCi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCiActionPerformed(evt);
            }
        });
        getContentPane().add(txtCi, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, 200, 30));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FONDOP1.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private void Bloquear(boolean flag) {

        if (flag == true) {
            btnImprimir.setEnabled(true);
            btnCancelar.setEnabled(false);
            txtAindicaciones.setEnabled(false);
            txtAmedicamentos.setEnabled(false);
        }
    }
//   private void guardar() {
//        Receta rec = null;
//
//        if (btnImprimir.getText().equals("Imprimir")) {
//            
////            rec = recetaDB.traeRecetaID(txtId.getText());
////            txtCedula.setText(String.valueOf(cedula));
////          txtId.setText(String.valueOf(rec.getId_serv()));  
////            txtId.getText(
//            if (rec == null) {
// 
//                if (ValidarCampos() == true) {
//                    rec = new Receta();                 
//                    rec.setConsulta(mas);
//                    rec.setNum_receta(txtNro.getText());
//                    rec.setFecha_receta(jDate.getCalendar());
//                    rec.setIndicac_receta(txtAindicaciones.getText());
//                    rec.setMedicam_receta(txtAmedicamentos.getText());                  
//                    rec.setEstado("A");                 
//                    recetaDB.nuevaReceta(rec);
//                    inicio();
//                } else {
//                    JOptionPane.showMessageDialog(null, "LLENAR CAMPOS REQUERIDOS", "Mensaje", JOptionPane.WARNING_MESSAGE);
////                    activa_Desac_Panel(false);
//                    inicio();
//                }
//            } else {
//                JOptionPane.showMessageDialog(null, "EL NOMBRE DE LA ESPECIALIDAD YA EXISTE EN EL SISTEMA", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
//            }
//
//        } 
//        inicio();
//
//    }

    private void guardar1() {
        
        Consulta c = new Consulta();

        if (jDate.getText() == null || txtAindicaciones.getText() == null || txtAmedicamentos.getText() == null) {
            JOptionPane.showMessageDialog(null, "LLENAR TODOS LOS CAMPOS ", "Advertencia", JOptionPane.WARNING_MESSAGE);

        } else {
            if (btnImprimir.getText().equals("Imprimir")) {
                Date fecha = new Date();
                c = consultaDB.traeConsultadID(Integer.parseInt(txtIDConsulta.getText()));
                int id = c.getId();
                Receta m = new Receta();
                m.setNum_receta(txtNro.getText());

                m.setFecha_receta(fecha);
                m.setIndicac_receta(txtAindicaciones.getText());
                m.setMedicam_receta(txtAmedicamentos.getText());
                m.setEstado("A");
                m.setConsulta(c);

//                c.getListaConsultas().add(m);
//                Consulta mas = null;
                recetaDB.nuevaReceta(m);
                JOptionPane.showMessageDialog(null, "RECETA REGISTRADA ", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }
            inicio();
        }
    }

    private static String fechaactual() {
        Date fecha = new Date();
        SimpleDateFormat formatofecha = new SimpleDateFormat("dd/MM/yyyy");
        return formatofecha.format(fecha);

    }

    private String retornaFechaString(Calendar fecha, int dias) {
        String retorno = null;
        fecha.add(Calendar.DAY_OF_YEAR, dias);
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (fecha != null) {
            retorno = sdf.format(fecha.getTime());
        }
        return retorno;
    }

    private void iniciar() {
//        jTextAreaMotivo.setEditable(false);
//        jTextAreaDiagnostico.setEditable(false);
        llenarTabla();
    }

    private void llenarTabla() {
        tableModel();
        List<Consulta> lista = null;
        lista = conDB.cargarConsulta(lista);
        for (Consulta consulta : lista) {
            model.addRow(new Object[]{consulta.getId(), consulta.getMascota().getNombre(),
                consulta.getPresion(), consulta.getTemp(), consulta.getPeso(), consulta.getMascota().getPersona().getCedula(),
                consulta.getMascota().getPersona().getNombre(), consulta.getVeterinario(), consulta.getFecha()});
        }
    }

    private void tableModel() {

        TableConsultas.getColumnModel().getColumn(0).setMaxWidth(0);
        TableConsultas.getColumnModel().getColumn(0).setMinWidth(0);
        TableConsultas.getColumnModel().getColumn(0).setPreferredWidth(0);

        TableConsultas.getColumnModel().getColumn(1).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(2).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(3).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(4).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(5).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(6).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(7).setPreferredWidth(300);
        TableConsultas.getColumnModel().getColumn(8).setPreferredWidth(300);

        model = (DefaultTableModel) TableConsultas.getModel();
        model.setNumRows(0);
    }

    private void buscarConsulta(String cedula) {
        if (validar.esNumerico(jTextFieldBuscar.getText()) == true) {
            model.setNumRows(0);
            List<Consulta> busca = new ArrayList<>();
            List<Consulta> lista = null;
            lista = conDB.cargarConsulta(lista);
            for (int i = 0; i < lista.size(); i++) {
                if (lista.get(i).getMascota().getPersona().getCedula().equals(cedula)) {
                    busca.add(lista.get(i));
                }
            }

            if (busca.size() > 0) {
                for (Consulta cons : busca) {
                    model.addRow(new Object[]{cons.getId(), cons.getMascota().getNombre(),
                        cons.getPresion(), cons.getTemp(), cons.getPeso(), cons.getMascota().getPersona().getCedula(),
                        cons.getMascota().getPersona().getNombre(), cons.getVeterinario(), cons.getFecha()});
                }

            } else {
                JOptionPane.showMessageDialog(null, "CLIENTE NO ENCONTRADO", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                llenarTabla();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese solo numeros");
        }
    }

    //
    private boolean ValidarCampos() {
        boolean lleno = true;
        if (txtAindicaciones.getText().equals("") || txtAmedicamentos.getText().equals("")) {
            lleno = false;
        } else {
            lleno = true;
        }
        return lleno;
    }
    int num_resp = 0;

    public int obtenerCodigoReceta() {
        num_resp = 0;
        List<Receta> lista = null;
        lista = recetaDB.cargarCodigoReceta(lista);
        for (Iterator<Receta> it = lista.iterator(); it.hasNext();) {
            Receta cit = it.next();
            num_resp = Integer.parseInt(cit.getNum_receta()) + 1;
        }
        if (num_resp == 0) {
            num_resp = 1;
        }
        return num_resp;
    }
//    
//    int num_resp = 0;
//         public int obtenerCodigoReceta() {
//        num_resp = 0;
//        List<Receta> lista = null;
//        lista = recetaDB.cargarCodigoReceta(lista);
//        for (Iterator<Receta> it = lista.iterator(); it.hasNext();) {
//            Receta rec = it.next();
//            num_resp = Integer.parseInt(rec.getNum_receta()) + 1;
//        }
//        if (num_resp == 0) {
//            num_resp = 1;
//        }
//        return num_resp;
//    }


    private void jDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jDateActionPerformed

    private void txtMascotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMascotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMascotaActionPerformed

    private void txtNroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClienteActionPerformed

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
//guardar1();    }//GEN-LAST:event_btnImprimirActionPerformed
guardar1();//registra bien lo de receta pero falta consulta  
   frmRecetaM rm = new frmRecetaM(this, true);
  
   rm.setR(recetaDB.traenumReceta(txtNro.getText()));
   rm.mostrarDatos();
   rm.setVisible(true);
    }

    private void btnBuscarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarConsultaActionPerformed
        llenarTabla();
        jDialog2.setSize(1200, 800);
        jDialog2.setLocationRelativeTo(null);
        jDialog2.setVisible(true);
        jDate.setEnabled(true);
        txtAindicaciones.setEnabled(true);
        txtAmedicamentos.setEnabled(true);
        btnImprimir.setEnabled(true);
        btnCancelar.setEnabled(true);
        jDate.setEnabled(false);

        // this.dispose();

    }//GEN-LAST:event_btnBuscarConsultaActionPerformed

    private void TableConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableConsultasMouseClicked
        // TODO add your handling code here:

        int seleccionar = TableConsultas.getSelectedRow();
        int idConsulta = Integer.parseInt(model.getValueAt(seleccionar, 0).toString());
        Consulta con = conDB.traeConsulta(idConsulta);
//        jTextAreaMotivo.setText(con.getMotivo());
//        jTextAreaDiagnostico.setText(con.getDiagnostico());
    }//GEN-LAST:event_TableConsultasMouseClicked

    private void jTextFieldBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBuscarActionPerformed

    private void jButtonbuscarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonbuscarConsultaActionPerformed
        if (jTextFieldBuscar.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "LLENAR CAMPO REQUERIDO", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        } else {
            buscarConsulta(jTextFieldBuscar.getText());
        }
    }//GEN-LAST:event_jButtonbuscarConsultaActionPerformed

    private void btnRecetarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecetarActionPerformed
        int seleccionar = TableConsultas.getSelectedRow();
        int idConsulta = Integer.parseInt(model.getValueAt(seleccionar, 0).toString());
        Consulta con = conDB.traeConsulta(idConsulta);
        //          serv = servicioDB.traeNombreServicio(txtNombre.getText());
        //con= conDB.traeConsulta(idConsulta);
        int selectRow = TableConsultas.getSelectedRow();
        try {
            if (selectRow == -1) {
                JOptionPane.showMessageDialog(null, "SELECCIONE UNA FILA DE LA TABLA", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            } else {

                modelConsulta = (DefaultTableModel) TableConsultas.getModel();
                String id = TableConsultas.getValueAt(selectRow, 0).toString();
                String mascota = TableConsultas.getValueAt(selectRow, 1).toString();
                String ci = TableConsultas.getValueAt(selectRow, 5).toString();
                String nombre = TableConsultas.getValueAt(selectRow, 6).toString();

                txtMascota.setText(mascota);
                txtCi.setText(ci);

                jDate.setText(fechaactual());
                txtCliente.setText(nombre);
                txtIDConsulta.setText(id);
//                jDialog2.setModal(false);
                jDialog2.setVisible(false);

                //                recetaDB.nuevaReceta(rec);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ERROR AL AGREGAR LA CITA " + e.getMessage(), "Mensaje", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRecetarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed

        txtAindicaciones.setText(null);
        txtAmedicamentos.setText(null);
//       btnBuscarConsulta.setEnabled(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtCiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmReceta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmReceta().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableConsultas;
    private javax.swing.JButton btnBuscarConsulta;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnRecetar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton jButtonbuscarConsulta;
    public static javax.swing.JTextField jDate;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextFieldBuscar;
    private javax.swing.JTextArea txtAindicaciones;
    private javax.swing.JTextArea txtAmedicamentos;
    public static javax.swing.JTextField txtCi;
    public static javax.swing.JTextField txtCliente;
    public static javax.swing.JLabel txtIDConsulta;
    public static javax.swing.JTextField txtMascota;
    public static javax.swing.JTextField txtNro;
    // End of variables declaration//GEN-END:variables
}
